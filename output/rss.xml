<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cracking the climate code</title><link>http://nicolasfauchereau.github.io/climatecode/</link><description>(Python) code and musings about open source for climate science</description><atom:link rel="self" type="application/rss+xml" href="http://nicolasfauchereau.github.io/climatecode/rss.xml"></atom:link><language>en</language><lastBuildDate>Wed, 30 Sep 2015 00:35:25 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>troubleshooting</title><link>http://nicolasfauchereau.github.io/climatecode/posts/troubleshooting/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div&gt;&lt;p&gt;In this post I am giving some pointers to troubleshoot issues when installing packages via &lt;a href="http://conda.pydata.org/docs/intro.html"&gt;conda&lt;/a&gt; or &lt;a href="https://pip.pypa.io/en/stable/"&gt;pip&lt;/a&gt;, as well
as some pointers to solve issues running the &lt;a href="https://jupyter.org"&gt;ipython (now jupyter)&lt;/a&gt; notebook on a machine behind a proxy.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/troubleshooting/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>ipython</category><category>notebook</category><category>troubleshooting</category><guid>http://nicolasfauchereau.github.io/climatecode/posts/troubleshooting/</guid><pubDate>Sat, 19 Sep 2015 04:47:51 GMT</pubDate></item><item><title>building an ENSO tracker with Matplotlib</title><link>http://nicolasfauchereau.github.io/climatecode/posts/building-an-enso-tracker-with-matplotlib/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this post, I will show how to play with &lt;a href="http://www.matplotlib.org"&gt;matplotlib&lt;/a&gt;'s patches to create a &lt;em&gt;gauge&lt;/em&gt; or &lt;em&gt;meter&lt;/em&gt;, the goal will be to get something like the &lt;a href="http://www.bom.gov.au/climate/enso/"&gt;Australian Bureau of Meteorology's ENSO tracker&lt;/a&gt; below&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.bom.gov.au/climate/enso/tracker/images/dial-5.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/building-an-enso-tracker-with-matplotlib/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>ENSO</category><category>gauge</category><category>matplotlib</category><category>meter</category><category>tracker</category><guid>http://nicolasfauchereau.github.io/climatecode/posts/building-an-enso-tracker-with-matplotlib/</guid><pubDate>Wed, 16 Sep 2015 08:06:04 GMT</pubDate></item><item><title>Miniconda installation</title><link>http://nicolasfauchereau.github.io/climatecode/posts/miniconda-installation/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div&gt;&lt;p&gt;Below is a &lt;code&gt;bash&lt;/code&gt; script to install &lt;a href="http://conda.pydata.org/miniconda.html"&gt;Miniconda&lt;/a&gt; and set up a root environment containing all the libraries that I routinely use and that are necessary to
replicate the examples given in this blog.
&lt;/p&gt;&lt;p&gt;&lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/miniconda-installation/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://nicolasfauchereau.github.io/climatecode/posts/miniconda-installation/</guid><pubDate>Thu, 13 Aug 2015 04:40:15 GMT</pubDate></item><item><title>EOF analysis with scikit-learn</title><link>http://nicolasfauchereau.github.io/climatecode/posts/eof-analysis-with-scikit-learn/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this notebook I give a very simple (and rather uncommented) example of how to use &lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/eof-analysis-with-scikit-learn/"&gt;scikit-learn&lt;/a&gt; to perform an Empirical Orthogonal Function decomposition (&lt;em&gt;EOF analysis&lt;/em&gt;, often referred to as well as &lt;em&gt;Principal Component Analysis&lt;/em&gt; or &lt;em&gt;PCA&lt;/em&gt;) of a climate field, in this case the monthly Sea Surface Temperature (SST) anomalies in the Pacific. 
&lt;/p&gt;&lt;p&gt;&lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/eof-analysis-with-scikit-learn/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>EOF</category><category>SST</category><guid>http://nicolasfauchereau.github.io/climatecode/posts/eof-analysis-with-scikit-learn/</guid><pubDate>Sun, 09 Aug 2015 23:21:34 GMT</pubDate></item><item><title>xray</title><link>http://nicolasfauchereau.github.io/climatecode/posts/xray/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/xray/xray"&gt;xray&lt;/a&gt; has been originally developed by scientists and engineers working at the &lt;a href="http://climate.com/"&gt;Climate Corporation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;strong&gt;xray&lt;/strong&gt; is a Python package that allows to define and manipulate &lt;strong&gt;N-Dimensional labelled arrays&lt;/strong&gt;. In a nutschell, whenever you've got data that is defined over more than 2 dimensions, and to each point along those &lt;strong&gt;dimensions&lt;/strong&gt; can be associated a &lt;strong&gt;label&lt;/strong&gt; (e.g. a &lt;em&gt;latitute&lt;/em&gt;, a &lt;em&gt;longitude&lt;/em&gt;, a &lt;em&gt;timestamp&lt;/em&gt;, a &lt;em&gt;depth&lt;/em&gt;, &lt;em&gt;etc&lt;/em&gt;) then you definitely need to have a look at xray.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
If this data model reminds you of the data structures introduced by the widely used &lt;a href="http://pandas.pydata.org"&gt;pandas&lt;/a&gt; library, this is not a coincidence, coming right from the &lt;a href="http://xray.readthedocs.org/en/stable/"&gt;xray documentation&lt;/a&gt; is this disclaimer: &lt;em&gt;"xray is an open source project and Python package that aims to bring the labeled data power of pandas to the physical sciences, by providing N-dimensional variants of the core pandas data structures."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
In this post I will give a few reasons why I think that &lt;strong&gt;xray&lt;/strong&gt; is destined to become a core Python package for people working with multi-dimensional arrays, especially - but not only - in the geosciences, before illustrating the power of xray with a few examples of how it simplifies considerably common operations on climate datasets. &lt;/p&gt;&lt;p&gt;&lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/xray/"&gt;Read more…&lt;/a&gt; (13 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>netcdf</category><category>xray</category><guid>http://nicolasfauchereau.github.io/climatecode/posts/xray/</guid><pubDate>Sat, 08 Aug 2015 04:43:24 GMT</pubDate></item><item><title>resources</title><link>http://nicolasfauchereau.github.io/climatecode/posts/resources/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div&gt;&lt;p&gt;A  - totally incomplete - list of resources I have come across on Python and Python for data analysis and visualization, loosely organized by category:&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="http://nicolasfauchereau.github.io/climatecode/posts/resources/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>books</category><category>ipython notebooks</category><category>libraries</category><category>resources</category><category>tutorials</category><guid>http://nicolasfauchereau.github.io/climatecode/posts/resources/</guid><pubDate>Mon, 03 Aug 2015 02:02:05 GMT</pubDate></item><item><title>About this blog</title><link>http://nicolasfauchereau.github.io/climatecode/posts/about-this-blog/</link><dc:creator>Nicolas Fauchereau</dc:creator><description>&lt;div&gt;&lt;p&gt;I am a climate scientist (to know more about me, head &lt;a href="http://nicolasfauchereau.github.io/climatecode/stories/about-me/"&gt;here&lt;/a&gt;) and have been using
&lt;a href="http://www.python.org"&gt;Python&lt;/a&gt; for data analysis
and visualisation for about 10 years, slowly transitioning from Matlab and R.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In this blog, I will try and share what I have learned along the way, and give
full examples of how I use Python in my research or operational workflows.  &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I will occasionally reflect on &lt;a href="http://openscience.com"&gt;open science&lt;/a&gt;, and how open-source in general,
and Python in particular can be used to help make climate science more open.  &lt;/p&gt;&lt;/div&gt;</description><category>about</category><category>open science</category><category>open source</category><guid>http://nicolasfauchereau.github.io/climatecode/posts/about-this-blog/</guid><pubDate>Mon, 03 Aug 2015 01:25:27 GMT</pubDate></item></channel></rss>